interface Node {
    id: ID!
}

type Author implements Node {
    id: ID!
    firstName: String!
    lastName: String!
    # Year of birth, if known.
    from: Int
    # Year of death, if applicable.
    until: Int
    books: [Book!]
}

type Book implements Node {
    id: ID!
    title: String!
    # A book must have one or more authors.
    authors: [Author!]!
    # Year of first publication.
    published: Int
    subject: [String!]
}

enum Direction {
    ASC
    DESC
}

input Paging {
    first: Int
    after: String
    direction: Direction
}

type Query {
    books(paging: Paging): [Book!]!
}
